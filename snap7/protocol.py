from typing import Protocol


import logging
import ctypes # c_void_p, _CData, CFuncPtr
from ctypes import byref, create_string_buffer, sizeof
from ctypes import Array, c_byte, c_char_p, c_int, c_int32, c_uint16, c_ulong, c_void_p
from _ctypes import CFuncPtr

logger = logging.getLogger(__name__)

class Snap7CliProtocol(Protocol):
    def Cli_Create(self) -> c_void_p:...
    def Cli_Destroy(self, pointer: c_void_p) -> None:...
    def Cli_PlcStop(self, pointer: c_void_p) -> int:...
    def Cli_PlcColdStart(self, pointer: c_void_p) -> int:...
    def Cli_PlcHotStart(self, pointer: c_void_p) -> int:...
    def Cli_GetPlcStatus(self, pointer: c_void_p, state: c_void_p) -> int:...
    def Cli_GetCpuInfo(self, pointer: c_void_p, info: c_void_p) -> int:...
    def Cli_Disconnect(self, pointer: c_void_p) -> int:...
    def Cli_Connect(self, pointer: c_void_p) -> int:...
    def Cli_ConnectTo(self, pointer: c_void_p, address: c_char_p, rack:c_int, slot:c_int) -> int:...
    def Cli_DBRead(self, pointer: c_void_p, db_number: int, start: int, size: int, data: c_void_p) -> int:...
    def Cli_DBWrite(self, pointer: c_void_p, db_number: int, start: int, size: int, data: c_void_p) -> int:...
    def Cli_Delete(self, pointer: c_void_p, blocktype: int, block_num: int) -> int:...
    def Cli_FullUpload(self, pointer: c_void_p, blocktype: int, block_num: int, data: c_void_p, size: c_void_p) -> int:...
    def Cli_Upload(self, pointer: c_void_p, block_type: int, block_num: int, data: c_void_p, size: c_void_p) -> int:...
    def Cli_Download(self, pointer: c_void_p, block_num: int, data: c_void_p, size: int) -> int:...
    def Cli_DBGet(self, pointer: c_void_p, db_number: int, data: c_void_p,  size: c_void_p) -> int:...
    def Cli_ReadArea(self, pointer: c_void_p, area: int, dbnumber: int, start: int, size: int, wordlen: int, data: c_void_p) -> int:...
    def Cli_WriteArea(self, pointer: c_void_p, area: int, dbnumber: int, start: int, size: int, wordlen: int, data: c_void_p) -> int:...
    def Cli_ReadMultiVars(self, pointer: c_void_p, items: c_void_p, items_count: c_int32) -> int:...
    def Cli_ListBlocks(self, pointer: c_void_p, blocksList: c_void_p) -> int:...
    def Cli_ListBlocksOfType(self, pointer: c_void_p, blocktype: int, data: c_void_p, count: c_void_p) -> int:...
    def Cli_GetAgBlockInfo(self, pointer: c_void_p, blocktype: int, db_number: int, data: c_void_p) -> int:...
    def Cli_SetSessionPassword(self, pointer: c_void_p, password: c_char_p) -> int:...
    def Cli_ClearSessionPassword(self, pointer: c_void_p) -> int: ...
    def Cli_SetConnectionParams(self, pointer: c_void_p, address: bytes, local_tsap: c_uint16, remote_tsap: c_uint16) -> int:...
    def Cli_SetConnectionType(self, pointer: c_void_p, connection_type: c_uint16) -> int:...
    def Cli_GetConnected(self, pointer: c_void_p, connected: c_void_p) -> int: ...
    def Cli_ABRead(self, pointer: c_void_p, start: int, size: int, data: c_void_p) -> int: ...
    def Cli_ABWrite(self, pointer: c_void_p, start: int,  size: int, cdata: c_void_p) -> int: ...
    def Cli_AsABRead(self, pointer: c_void_p, start: int, size: int, data: c_void_p) -> int: ...
    def Cli_AsABWrite(self, pointer: c_void_p, start: int,  size: int, cdata: c_void_p) -> int: ...
    def Cli_AsCompress(self, pointer: c_void_p, time: int) -> int: ...
    def Cli_AsCopyRamToRom(self, pointer: c_void_p, time: int) -> int: ...
    def Cli_AsCTRead(self, pointer: c_void_p, start: int, amount: int, data: c_void_p) -> int: ...
    def Cli_AsCTWrite(self, pointer: c_void_p, start: int, amount: int, cdata: c_void_p) -> int: ...
    def Cli_AsDBFill(self, pointer: c_void_p, db_number: int, filler: int) -> int: ...
    def Cli_AsDBGet(self, pointer: c_void_p, db_number: int, _buffer: c_void_p, size: c_void_p) -> int: ...
    def Cli_AsDBRead(self, pointer: c_void_p, db_number: int, start: int, size: int, data: c_void_p) -> int: ...
    def Cli_AsDBWrite(self, pointer: c_void_p, db_number: int, start: int, size: int, data: c_void_p) -> int: ...
    def Cli_AsDownload(self, pointer: c_void_p, block_num: int, cdata: c_void_p, size: int) -> int: ...
    def Cli_Compress(self, pointer: c_void_p, time: int) -> int: ...
    def Cli_SetParam(self, pointer: c_void_p, number: int, value: c_void_p) -> int: ...
    def Cli_GetParam(self, pointer: c_void_p, number: c_int, value: c_void_p) -> int: ...
    def Cli_GetPduLength(self, pointer: c_void_p, requested_: c_void_p, negotiated_: c_void_p) -> int: ...
    def Cli_GetPlcDateTime(self, pointer: c_void_p, buffer: c_void_p) -> int: ...
    def Cli_SetPlcDateTime(self, pointer: c_void_p, buffer: c_void_p) -> int: ...
    def Cli_SetAsCallback(self, pointer: c_void_p, pfn_clicompletion: CFuncPtr, p_usr: c_void_p) -> int: ...
    def Cli_WaitAsCompletion(self, pointer: c_void_p, timeout: c_ulong) -> int: ...
    def Cli_AsReadArea(self, pointer: c_void_p, area: int, dbnumber: int, start: int, size: int, wordlen: int, data: c_void_p) -> int:...
    def Cli_AsWriteArea(self, pointer: c_void_p, area: int, dbnumber: int, start: int, size: int, wordlen: int, data: c_void_p) -> int:...
    def Cli_AsEBRead(self, pointer: c_void_p, start: int, size: int, data: c_void_p) -> int: ...
    def Cli_AsEBWrite(self, pointer: c_void_p, start: int, size: int, cdata: c_void_p) -> int: ...
    def Cli_AsFullUpload(self, pointer: c_void_p, block_type: int, block_num: int, _buffer: c_void_p, size: c_void_p) -> int: ...
    def Cli_AsListBlocksOfType(self, pointer: c_void_p, _blocktype: int, data: c_void_p, count: c_void_p) -> int:...
    def Cli_AsMBRead(self, pointer: c_void_p, start: int, size: int, data: c_void_p) -> int:...
    def Cli_AsMBWrite(self, pointer: c_void_p, start: int, size: int, data: c_void_p) -> int:...
    def Cli_AsReadSZL(self, pointer: c_void_p, ssl_id: int, index:int, s7_szl: c_void_p, size: c_void_p) -> int:...
    def Cli_AsReadSZLList(self, pointer: c_void_p, szl_list: c_void_p, items_count: c_void_p) -> int:...
    def Cli_AsTMRead(self, pointer: c_void_p, start: int, amount: int, data: c_void_p) -> int:...
    def Cli_AsTMWrite(self, pointer: c_void_p, start: int, amount: int, data: c_void_p) -> int:...
    def Cli_AsUpload(self, pointer: c_void_p, block_type: int, block_num:int, _buffer: c_void_p, size: c_void_p) -> int:...
    def Cli_CopyRamToRom(self, pointer: c_void_p, timeout: int) -> int:...
    def Cli_CTRead(self, pointer: c_void_p, start: int, amount: int, data: c_void_p) -> int:...
    def Cli_CTWrite(self, pointer: c_void_p, start:int, amount:int, cdata: c_void_p) -> int:...
    def Cli_DBFill(self, pointer: c_void_p, db_number: int, filler: int) -> int:...
    def Cli_EBRead(self, pointer: c_void_p, start: int, size: int, data: c_void_p) -> int: ...
    def Cli_EBWrite(self, pointer: c_void_p, start: int, size: int, cdata: c_void_p) -> int:...
    def Cli_ErrorText(self, error_code: c_int32, text: c_void_p, text_length: c_int) -> int: ...
    def Cli_GetCpInfo(self, pointer: c_void_p, cp_info: c_void_p) -> int: ...
    def Cli_GetExecTime(self, pointer: c_void_p, time: c_void_p) -> int:...
    def Cli_GetLastError(self, pointer: c_void_p, last_error: c_void_p) -> int:...
    def Cli_GetOrderCode(self, pointer: c_void_p, order_code: c_void_p) -> int:...
    def Cli_GetPgBlockInfo(self, pointer: c_void_p, buffer: c_void_p, block_info: c_void_p, size: c_int) -> int:...
    def Cli_GetProtection(self, pointer: c_void_p, s7_protection: c_void_p) -> int: ...
    def Cli_IsoExchangeBuffer(self, pointer: c_void_p, cdata: c_void_p, size: c_void_p) -> int:...
    def Cli_MBRead(self, pointer: c_void_p, start: int, size: int, data: c_void_p) -> int:...
    def Cli_MBWrite(self, pointer: c_void_p, start: int, size: int, cdata: c_void_p) -> int:...
    def Cli_ReadSZL(self, pointer: c_void_p, ssl_id: int, index: int, s7_szl: c_void_p, size: c_void_p) -> int:...
    def Cli_ReadSZLList(self, pointer: c_void_p, szl_list: c_void_p, items_count: c_void_p) -> int:...
    def Cli_SetPlcSystemDateTime(self, pointer: c_void_p) -> int:...
    def Cli_TMRead(self, pointer: c_void_p, start: int, amount:int, data: c_void_p) -> int: ...
    def Cli_TMWrite(self, pointer: c_void_p, start: int, amount: int, cdata: c_void_p) -> int:...
    def Cli_WriteMultiVars(self, pointer: c_void_p, cdata: c_void_p, items_count: c_int32) -> int:...
    def Cli_CheckAsCompletion(self, pointer: c_void_p, p_value: c_int) -> int:...

class Snap7SrvProtocol(Protocol):
    def Srv_Create(self) -> c_void_p: ...
    def Srv_Start(self, pointer: c_void_p) -> int: ...
    def Srv_Stop(self, pointer: c_void_p) -> int: ...
    def Srv_Destroy(self, pointer: c_void_p) -> None: ...
    def Srv_EventText(self, event: c_void_p, text: c_void_p, len_: int) -> int:...
    def Srv_RegisterArea(self, pointer: c_void_p, area_code: int, index: int, userdata: c_void_p, size:int) -> int:...
    def Srv_SetEventsCallback(self, pointer: c_void_p, callback: CFuncPtr, usrPtr: c_void_p) -> int: ...
    def Srv_SetReadEventsCallback(self, pointer: c_void_p, read_callback: CFuncPtr) -> int: ...
    def Srv_GetStatus(self, pointer: c_void_p, server_status: c_void_p, cpu_status: c_void_p, clients_count: c_void_p) -> int:...
    def Srv_UnregisterArea(self, pointer: c_void_p, area_code: int, index: int) -> int:...
    def Srv_UnlockArea(self, pointer: c_void_p, code: int, index: int) -> int:...
    def Srv_LockArea(self, pointer: c_void_p, code: int, index: int) -> int: ...
    def Srv_StartTo(self, pointer: c_void_p, ip: bytes) -> int: ...
    def Srv_SetParam(self, pointer: c_void_p, number: int, value: c_void_p) -> int: ...
    def Srv_SetMask(self, pointer: c_void_p, kind: int, mask: int) -> int: ...
    def Srv_SetCpuStatus(self, pointer: c_void_p, status: int) -> int: ...
    def Srv_PickEvent(self, pointer: c_void_p, event: c_void_p, ready: c_void_p) -> int: ...
    def Srv_GetParam(self, pointer: c_void_p, number: int, value: c_void_p) -> int:...
    def Srv_GetMask(self, pointer: c_void_p, kind: int, mask: c_void_p) -> int:...
    def Srv_ClearEvents(self, pointer: c_void_p) -> int: ...
